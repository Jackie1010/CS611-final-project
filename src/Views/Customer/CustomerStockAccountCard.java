/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Views.Customer;

import Controllers.CustomerStockAccountController;
import Controllers.CustomerStockMarketActionMenuController;
import Views.Customer.TableCellRenderers.TradeAccountTableCellRenderer;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;

/**
 * @author zeqi
 */
public class CustomerStockAccountCard extends javax.swing.JPanel {

    //TODO: update content based on database customer id, make these variables global scope
    //TODO: Make sure all numbers are in 5 decimals
    int customerID;
    String[] columnNames;
    Object[][] data;

    private CustomerStockAccountController customerController;
    private CustomerStockMarketActionMenuController customerStockMarketActionMenuController;


    /******************/

    public CustomerStockAccountCard(int CustomerID, CustomerStockAccountController customerController, CustomerStockMarketActionMenuController customerStockMarketActionMenuController) {
        this.customerController = customerController;
        this.customerStockMarketActionMenuController = customerStockMarketActionMenuController;
        this.customerID = CustomerID;
        customerController.setCustomerId(customerID);
        customerStockMarketActionMenuController.setCustomerId(customerID);
        initComponents();


        customerController.setData();
        System.out.println("From StockAccountCardView: Data Fetched from the DB");
        customerController.setCustomerStockAccountCard(this);

        //TODO: You might want to initialize the table from database after this line
        //FIXME: For the tradable column, I don't know why I cannot directly put T or F in this Object[][] variable
        //FIXME: And It's weird that I am able to put T/F at the StockMarket Table in CustomerStockMarketCard.java
        //FIXME: So The way I put the T/F for this table is at the TradeAccountTableCellRenderer.java
        LBLCashAvailable.setText(String.valueOf(customerController.getCashAvailable(customerID)));
//        LBLCashAvailable.setText("10000");//DELETE this after database implementation
        updateContent();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPaneTable = new javax.swing.JScrollPane();
        TBLTradingStocks = new javax.swing.JTable();
        PNLTop = new javax.swing.JPanel();
        PNLTitle = new javax.swing.JPanel();
        LBLTitleTXT = new javax.swing.JLabel();
        LBLProfit1TXT = new javax.swing.JLabel();
        LBLCurrentUnrealizedProfit = new javax.swing.JLabel();
        LBLProfit2TXT = new javax.swing.JLabel();
        LBLCurrentRealizedProfit = new javax.swing.JLabel();
        LBLCashAvailable = new javax.swing.JLabel();
        LBLWalletTXT = new javax.swing.JLabel();
        LBLTotalCost = new javax.swing.JLabel();
        LBLTCTXT = new javax.swing.JLabel();
        TXTSearchSymbol = new javax.swing.JTextField();
        BTNSearch = new javax.swing.JButton();
        LBLSearch = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setPreferredSize(new java.awt.Dimension(900, 700));

        jScrollPaneTable.setPreferredSize(new java.awt.Dimension(900, 439));

        TBLTradingStocks.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][]{
                        {null, null, null, null, null, null, null, null, null, null},
                        {null, null, null, null, null, null, null, null, null, null},
                        {null, null, null, null, null, null, null, null, null, null},
                        {null, null, null, null, null, null, null, null, null, null}
                },
                new String[]{
                        "Stock Name", "Stock ID", "Symbol", "Current Price", "Cost", "Shares", "Unrealized Profit", "ToBuy", "ToSell", "Tradable"
                }
        ) {
            boolean[] canEdit = new boolean[]{
                    false, false, false, false, false, false, false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }
        });
        TBLTradingStocks.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        TBLTradingStocks.setPreferredSize(new java.awt.Dimension(900, 439));
        jScrollPaneTable.setViewportView(TBLTradingStocks);

        PNLTop.setPreferredSize(new java.awt.Dimension(900, 226));

        LBLTitleTXT.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 18)); // NOI18N
        LBLTitleTXT.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        LBLTitleTXT.setText("Customer Trading Account");
        LBLTitleTXT.setPreferredSize(new java.awt.Dimension(92, 21));

        javax.swing.GroupLayout PNLTitleLayout = new javax.swing.GroupLayout(PNLTitle);
        PNLTitle.setLayout(PNLTitleLayout);
        PNLTitleLayout.setHorizontalGroup(
                PNLTitleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PNLTitleLayout.createSequentialGroup()
                                .addComponent(LBLTitleTXT, javax.swing.GroupLayout.DEFAULT_SIZE, 871, Short.MAX_VALUE)
                                .addContainerGap())
        );
        PNLTitleLayout.setVerticalGroup(
                PNLTitleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PNLTitleLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(LBLTitleTXT, javax.swing.GroupLayout.DEFAULT_SIZE, 37, Short.MAX_VALUE)
                                .addContainerGap())
        );

        LBLProfit1TXT.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        LBLProfit1TXT.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        LBLProfit1TXT.setText("Current Account's Unrealized Profit: $");

        LBLCurrentUnrealizedProfit.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        LBLCurrentUnrealizedProfit.setText(String.format("%.2f", customerController.getUnRealizedProfitByCustomerID(customerID)));

        LBLProfit2TXT.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        LBLProfit2TXT.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        LBLProfit2TXT.setText("Current Account's Realized Profit: $");

        LBLCurrentRealizedProfit.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        LBLCurrentRealizedProfit.setText(String.format("%.2f", customerController.getRealizedProfitByCustomerID(customerID)));

        LBLCashAvailable.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        LBLCashAvailable.setText(String.format("%.2f", customerController.getCashAvailable(customerID)));

        LBLWalletTXT.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        LBLWalletTXT.setText("Cash Available: $");

        LBLTotalCost.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        LBLTotalCost.setText(String.format("%.2f", customerController.getTotalInvested(customerID)));

        LBLTCTXT.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        LBLTCTXT.setText("Total Cost: $");

        TXTSearchSymbol.setToolTipText("Type Symbol to search");
        TXTSearchSymbol.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TXTSearchSymbolActionPerformed(evt);
            }
        });

        BTNSearch.setText("Search");
        BTNSearch.addActionListener(customerController);

        LBLSearch.setText("Search By Symbol");

        javax.swing.GroupLayout PNLTopLayout = new javax.swing.GroupLayout(PNLTop);
        PNLTop.setLayout(PNLTopLayout);
        PNLTopLayout.setHorizontalGroup(
                PNLTopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(PNLTopLayout.createSequentialGroup()
                                .addGroup(PNLTopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(PNLTopLayout.createSequentialGroup()
                                                .addGroup(PNLTopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(PNLTopLayout.createSequentialGroup()
                                                                .addGap(335, 335, 335)
                                                                .addComponent(TXTSearchSymbol, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                        .addGroup(PNLTopLayout.createSequentialGroup()
                                                                .addGap(222, 222, 222)
                                                                .addComponent(LBLSearch)))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(BTNSearch))
                                        .addGroup(PNLTopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addGroup(PNLTopLayout.createSequentialGroup()
                                                        .addGap(13, 13, 13)
                                                        .addComponent(PNLTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PNLTopLayout.createSequentialGroup()
                                                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addGroup(PNLTopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                .addGroup(PNLTopLayout.createSequentialGroup()
                                                                        .addComponent(LBLWalletTXT)
                                                                        .addGap(0, 0, 0)
                                                                        .addComponent(LBLCashAvailable, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                                .addGroup(PNLTopLayout.createSequentialGroup()
                                                                        .addComponent(LBLTCTXT)
                                                                        .addGap(0, 0, 0)
                                                                        .addComponent(LBLTotalCost, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                        .addGroup(PNLTopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                .addGroup(PNLTopLayout.createSequentialGroup()
                                                                        .addComponent(LBLProfit2TXT)
                                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                        .addComponent(LBLCurrentRealizedProfit, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                                .addGroup(PNLTopLayout.createSequentialGroup()
                                                                        .addComponent(LBLProfit1TXT)
                                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                        .addComponent(LBLCurrentUnrealizedProfit, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        PNLTopLayout.setVerticalGroup(
                PNLTopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(PNLTopLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(PNLTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(20, 20, 20)
                                .addGroup(PNLTopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(LBLCashAvailable, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(LBLWalletTXT, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(LBLProfit1TXT, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(LBLCurrentUnrealizedProfit, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(30, 30, 30)
                                .addGroup(PNLTopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(PNLTopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                .addComponent(LBLTotalCost, javax.swing.GroupLayout.DEFAULT_SIZE, 37, Short.MAX_VALUE)
                                                .addComponent(LBLTCTXT, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addGroup(PNLTopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                .addComponent(LBLProfit2TXT, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(LBLCurrentRealizedProfit, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(26, 26, 26)
                                .addGroup(PNLTopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(TXTSearchSymbol, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(BTNSearch)
                                        .addComponent(LBLSearch))
                                .addGap(17, 17, 17))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jScrollPaneTable, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                        .addGroup(layout.createSequentialGroup()
                                                .addComponent(PNLTop, javax.swing.GroupLayout.PREFERRED_SIZE, 888, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(0, 0, Short.MAX_VALUE)))
                                .addContainerGap())
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(PNLTop, javax.swing.GroupLayout.DEFAULT_SIZE, 244, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPaneTable, javax.swing.GroupLayout.PREFERRED_SIZE, 439, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void TXTSearchSymbolActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TXTSearchSymbolActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TXTSearchSymbolActionPerformed

    private void BTNSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTNSearchActionPerformed
        // TODO add your handling code here:
        System.out.println("Search Button clicked");
    }//GEN-LAST:event_BTNSearchActionPerformed


    /**
     * Refresh Page
     */
    public void updateContent() {
        /**
         * Try not to modify these code, or if you feel it's necessarily to do so
         */
        //Default settings for every table
        columnNames = customerController.getStockAccountColumns();
        data = customerController.getStockAccountData();
        DefaultTableModel tableModel = new DefaultTableModel(data, columnNames) {
            @Override
            public boolean isCellEditable(int row, int column) {
                // Make all cells non-editable
                return false;
            }
        };
        // Set the table model for the JTable
        TBLTradingStocks.setModel(tableModel);
        TBLTradingStocks.getTableHeader().setReorderingAllowed(false);

        // Initialize mouse listeners in the table
        MouseListener[] mouseListeners = TBLTradingStocks.getMouseListeners();
        for (MouseListener mouseListener : mouseListeners) {
            TBLTradingStocks.removeMouseListener(mouseListener);
        }
        //Adding mouse pressed listeners to the specific areas of the table
        TBLTradingStocks.addMouseListener(new MouseAdapter() {
            @Override
            public void mousePressed(MouseEvent e) {
                int column = TBLTradingStocks.columnAtPoint(e.getPoint());
                int row = TBLTradingStocks.rowAtPoint(e.getPoint());
                // Check if the clicked cell is in the "ToBuy" column
                if (row >= 0 && row < TBLTradingStocks.getRowCount()) {
                    // Unselect all rows except the clicked one
                    TBLTradingStocks.clearSelection();
                    TBLTradingStocks.addRowSelectionInterval(row, row);
                    // I want the 2nd row, 4th column of TBLTradingStocks


                    String stockName = (String) TBLTradingStocks.getValueAt(row, 0);
                    String stockSymbol = (String) TBLTradingStocks.getValueAt(row, 2);
                    if (column == 6) {
                        //implement Buy functionalities in this method
                        customerController.toBuyDialog(stockName, stockSymbol, LBLCashAvailable, customerID);
                    } else if (column == 7) {
                        customerController.toSellDialog(row, stockName, stockSymbol, TBLTradingStocks, LBLCashAvailable, customerID);
//                        toSellDialog(row);
                    } else if (column == 0) {
                        //TODO: move this to your controller based on your need
                        showAccountMenu(row, stockName, stockSymbol, TBLTradingStocks, LBLCashAvailable);
                    }
                }
            }
        });

        //Special Customization for UIs

        TableColumn toBuy = TBLTradingStocks.getColumnModel().getColumn(6);
        toBuy.setPreferredWidth(30);
        toBuy.setCellRenderer(new TradeAccountTableCellRenderer());


        TableColumn toSell = TBLTradingStocks.getColumnModel().getColumn(7);
        toSell.setPreferredWidth(30);
        toSell.setCellRenderer(new TradeAccountTableCellRenderer());

//        TableColumn unProfit = TBLTradingStocks.getColumnModel().getColumn(6);
//        unProfit.setPreferredWidth(120);
//        unProfit.setCellRenderer(new TradeAccountTableCellRenderer());

        TableColumn tradable = TBLTradingStocks.getColumnModel().getColumn(8);
        tradable.setPreferredWidth(50);
        tradable.setCellRenderer(new TradeAccountTableCellRenderer());
        /********Do not change**********/

        /**
         * Data Update
         */
        //This method get the table content into Object[][] form, column names not included
        data = getDataFromTable(TBLTradingStocks);
//        updateEachStockUnrealizedProfit(data);
//        updateTotalCost(data);
//        updateAccountUnrealizedProfit(data);
    }

    public void updateTable(){
        updateContent();
    }

    private void showAccountMenu(int row, String stockName, String stockSymbol, JTable table, JLabel LBLCashAvailable) {
        System.out.println("Show Stock Action clicked");
        new StockAccountActionMenu(row, customerID, stockName, stockSymbol, customerStockMarketActionMenuController, table, LBLCashAvailable).setVisible(true);
    }


    private void updateAccountUnrealizedProfit(Object[][] data) {
        double totalUnrealizedProfit = 0;
        for (int i = 0; i < data.length; i++) {
            Object[] row = data[i];
            double urProfit = Double.parseDouble((String) row[6]);
            totalUnrealizedProfit += urProfit;
        }
        LBLCurrentUnrealizedProfit.setText(String.format("%.2f", totalUnrealizedProfit));
    }

    private void updateTotalCost(Object[][] data) {
        double totalCost = 0;
        for (int i = 0; i < data.length; i++) {
            Object[] row = data[i];
            double cost = Double.parseDouble((String) row[4]);
            totalCost += cost;
        }
        LBLTotalCost.setText(String.format("%.2f", totalCost));
    }

    private void updateEachStockUnrealizedProfit(Object[][] data) {
        for (int i = 0; i < data.length; i++) {
            Object[] row = data[i];
            double currentPrice = Double.parseDouble((String) row[3]);
            double cost = Double.parseDouble((String) row[4]);
            double shares = Double.parseDouble((String) row[5]);
            double unrealizedProfit = (currentPrice - (cost / shares)) * shares;
            data[i] = new Object[]{row[0], row[1], row[2], row[3], row[4], row[5], String.format("%.2f", unrealizedProfit), row[7]};
        }
    }

    private void toSellDialog(int row) {
        //TODO check from database to see if current stock available to trade, if not available, show a warning dialog
        //Realized Profit = (Current Price - Total Cost / Shares) * Shares Sold
        System.out.println("Show Dialog of Selling Stock");
        // Get the stock name from the row
        String stockName = (String) TBLTradingStocks.getValueAt(row, 0);
        // Get the number of shares owned by the user
        double currentShares = Double.parseDouble(TBLTradingStocks.getValueAt(row, 5).toString());
        // Show the sell dialog here
        JTextField sharesField = new JTextField();
        Object[] message = {
                "How many shares of " + stockName + " do you want to sell? (Auto rounded to 5 decimals)", sharesField
        };
        int option = JOptionPane.showConfirmDialog(null, message, "Sell Shares", JOptionPane.OK_CANCEL_OPTION);
        if (option == JOptionPane.OK_OPTION) {
            try {
                // Parse the number of shares entered by the user
                double sharesToSold = Double.parseDouble(sharesField.getText().trim());
                if (sharesToSold <= 0) {
                    throw new NumberFormatException();
                }
                if (sharesToSold > currentShares) {
                    throw new Exception("You cannot sell more shares than you own.");
                }
                // Update the total cost and unrealized profit in the table
                double currentCost = Double.parseDouble(TBLTradingStocks.getValueAt(row, 4).toString());
                double currentPrice = Double.parseDouble(TBLTradingStocks.getValueAt(row, 3).toString());
                //Update new total cost
                //New total cost = (current total cost / current number of shares) * (current number of shares - shares sold)
//                double newCost = currentCost - sharesToSold * currentPrice;
                double newCost = (currentCost / currentShares) * (currentShares - sharesToSold);
                double newShares = currentShares - sharesToSold;

                TBLTradingStocks.setValueAt(String.format("%.2f", newShares), row, 5);
                TBLTradingStocks.setValueAt(String.format("%.2f", newCost), row, 4);
                //Update the new Available Cash
                double soldCash = sharesToSold * currentPrice;
                double availableCash = Double.parseDouble(LBLCashAvailable.getText());
                double newAvailableCash = availableCash + soldCash;
                LBLCashAvailable.setText(String.format("%.2f", newAvailableCash));

                //Realized Profit = (Current Price * Shares Sold) - (Total Cost / Number of Shares * Shares Sold)
                double currentRealizedProfit = Double.parseDouble(LBLCurrentRealizedProfit.getText());
                double newRealizedProfit = (currentPrice - (currentCost / currentShares)) * sharesToSold;
                double newTotalRP = currentRealizedProfit + newRealizedProfit;
                LBLCurrentRealizedProfit.setText(String.format("%.2f", newTotalRP));

                // Calculate and update the new realized profit
                double newUnrealizedProfit = (currentPrice * newShares) - newCost;
                TBLTradingStocks.setValueAt(String.format("%.2f", newUnrealizedProfit), row, 6);
            } catch (NumberFormatException ex) {
                JOptionPane.showMessageDialog(null, "Invalid number of shares. Please enter a positive number.");
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage());
            }
        }
        data = getDataFromTable(TBLTradingStocks);
        updateAccountUnrealizedProfit(data);
        updateTotalCost(data);
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BTNSearch;
    private javax.swing.JLabel LBLCashAvailable;
    private javax.swing.JLabel LBLCurrentRealizedProfit;
    private javax.swing.JLabel LBLCurrentUnrealizedProfit;
    private javax.swing.JLabel LBLProfit1TXT;
    private javax.swing.JLabel LBLProfit2TXT;
    private javax.swing.JLabel LBLSearch;
    private javax.swing.JLabel LBLTCTXT;
    private javax.swing.JLabel LBLTitleTXT;
    private javax.swing.JLabel LBLTotalCost;
    private javax.swing.JLabel LBLWalletTXT;
    private javax.swing.JPanel PNLTitle;
    private javax.swing.JPanel PNLTop;
    private javax.swing.JTable TBLTradingStocks;
    private javax.swing.JTextField TXTSearchSymbol;
    private javax.swing.JScrollPane jScrollPaneTable;
    // End of variables declaration//GEN-END:variables

    /**
     * Getter method for LBLCashAvailable
     */
    public javax.swing.JLabel getLBLCashAvailable() {
        return LBLCashAvailable;
    }

    /**
     * Getter methods for Search Button and Search Text
     */
    public javax.swing.JButton getBTNSearch() {
        return BTNSearch;
    }

    public javax.swing.JTextField getTXTSearchSymbol() {
        return TXTSearchSymbol;
    }

    public Object[][] getData() {
        return data;
    }

    public void setData(Object[][] data) {
        this.data = data;
    }

    public Object[][] getDataFromTable(JTable table) {
        DefaultTableModel model = (DefaultTableModel) table.getModel();
        int numRows = model.getRowCount();
        int numCols = model.getColumnCount();
        Object[][] data = new Object[numRows][numCols];

        for (int i = 0; i < numRows; i++) {
            for (int j = 0; j < numCols; j++) {
                data[i][j] = model.getValueAt(i, j);
            }
        }

        return data;
    }


}
