/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Views.Customer;

import Controllers.CustomerController;
import Controllers.CustomerHomeController;
import Controllers.CustomerTradingHistoryController;
import Views.Customer.TableCellRenderers.CustomerHomeTableCellRenderer;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;

/**
 * @author zeqi
 */
public class CustomerHomeCard extends javax.swing.JPanel {
    //TODO: update content based on database customer id, make these variables global scope
    //TODO: Make sure all numbers are in 5 decimals
    //TODO: Add a notification dialog and when admin send notification for second account, show this dialog
    private CustomerHomeController customerController;
    private CustomerTradingHistoryController customerTradingHistoryController;
    int customerID;
    String[] columnNames;
    Object[][] data;

    /******************/

    public CustomerHomeCard(int CustomerID, CustomerHomeController customerController, CustomerTradingHistoryController customerTradingHistoryController) {
        this.customerController = customerController;
        this.customerTradingHistoryController = customerTradingHistoryController;
        this.customerID = CustomerID;
        customerController.setCustomerHomeCard(this);
        customerController.setCustomerId(customerID);
        customerTradingHistoryController.setCustomerId(customerID);
        initComponents();
        //TODO: for other four values at the top of the current page please load them from the database
        //TODO: You might want to initialize the table from database after this line
        columnNames = customerController.getColumnNames();
        data = customerController.getData();
        LBLTotalRealizedProfit.setText(String.format("%.2f", customerController.getRealizedProfitByCustomerID(customerID)));
        LBLTotalUnrealizedProfit.setText(String.format("%.2f", customerController.getUnRealizedProfitByCustomerID(customerID)));

        updateContent();

    }

    /**
     * Display notification dialog
     */
    public void showNotificationDialog() {
        System.out.println("showNotificationDialog");
        customerController.showNotifications(customerID);
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPaneTable = new javax.swing.JScrollPane();
        TBLMyAccountsTable = new javax.swing.JTable();
        PNLTop = new javax.swing.JPanel();
        PNLWallets = new javax.swing.JPanel();
        LBLMyWalletsTXT = new javax.swing.JLabel();
        LBLWallet1TXT = new javax.swing.JLabel();
        LBLCashAvailable = new javax.swing.JLabel();
        BTNAddCash = new javax.swing.JButton();
        LBLTCTXT = new javax.swing.JLabel();
        LBLTotalCost = new javax.swing.JLabel();
        BTNDeductCash = new javax.swing.JButton();
        PNLProfits = new javax.swing.JPanel();
        LBLProfit1TXT = new javax.swing.JLabel();
        LBLTotalUnrealizedProfit = new javax.swing.JLabel();
        LBLMyProfitsTXT = new javax.swing.JLabel();
        LBLProfit2TXT = new javax.swing.JLabel();
        LBLTotalRealizedProfit = new javax.swing.JLabel();
        BTNAddNewTradingAccount = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setPreferredSize(new java.awt.Dimension(900, 700));
        setSize(new java.awt.Dimension(900, 700));

        TBLMyAccountsTable.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][]{
                        {null, null},
                        {null, null},
                        {null, null},
                        {null, null}
                },
                new String[]{
                        "Account ID", "Get Report"
                }
        ) {
            boolean[] canEdit = new boolean[]{
                    false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }
        });
        jScrollPaneTable.setViewportView(TBLMyAccountsTable);

        PNLTop.setBackground(new java.awt.Color(255, 255, 255));
        PNLTop.setLayout(new java.awt.BorderLayout());

        PNLWallets.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        PNLWallets.setPreferredSize(new java.awt.Dimension(440, 299));

        LBLMyWalletsTXT.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 18)); // NOI18N
        LBLMyWalletsTXT.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        LBLMyWalletsTXT.setText("My Wallets");

        LBLWallet1TXT.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        LBLWallet1TXT.setText("Cash Available: $");

        LBLCashAvailable.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        LBLCashAvailable.setText(String.format("%.2f", customerController.getCashAvailable(customerID)));

        BTNAddCash.setText("Add Money To Cash");
        BTNAddCash.addActionListener(customerController);

        LBLTCTXT.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        LBLTCTXT.setText("Total Cost: $");

        LBLTotalCost.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        LBLTotalCost.setText(String.format("%.2f", customerController.getTotalInvested(customerID)));

        BTNDeductCash.setText("Deduct Money From Cash");
        BTNDeductCash.addActionListener(customerController);

        javax.swing.GroupLayout PNLWalletsLayout = new javax.swing.GroupLayout(PNLWallets);
        PNLWallets.setLayout(PNLWalletsLayout);
        PNLWalletsLayout.setHorizontalGroup(
                PNLWalletsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(PNLWalletsLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(PNLWalletsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(LBLMyWalletsTXT, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(PNLWalletsLayout.createSequentialGroup()
                                                .addComponent(LBLWallet1TXT)
                                                .addGap(0, 0, 0)
                                                .addComponent(LBLCashAvailable, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addGroup(PNLWalletsLayout.createSequentialGroup()
                                                .addComponent(LBLTCTXT)
                                                .addGap(0, 0, 0)
                                                .addComponent(LBLTotalCost, javax.swing.GroupLayout.DEFAULT_SIZE, 341, Short.MAX_VALUE)))
                                .addContainerGap())
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PNLWalletsLayout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(BTNAddCash, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(BTNDeductCash, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(17, 17, 17))
        );
        PNLWalletsLayout.setVerticalGroup(
                PNLWalletsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(PNLWalletsLayout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(LBLMyWalletsTXT, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(PNLWalletsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(LBLWallet1TXT, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(LBLCashAvailable, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(26, 26, 26)
                                .addGroup(PNLWalletsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(BTNAddCash, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(BTNDeductCash, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(48, 48, 48)
                                .addGroup(PNLWalletsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(LBLTCTXT, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(LBLTotalCost, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap(57, Short.MAX_VALUE))
        );

        PNLTop.add(PNLWallets, java.awt.BorderLayout.WEST);

        PNLProfits.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        PNLProfits.setPreferredSize(new java.awt.Dimension(440, 299));

        LBLProfit1TXT.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        LBLProfit1TXT.setText("Total Unrealized Profit: $");

        LBLTotalUnrealizedProfit.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        LBLTotalUnrealizedProfit.setText(String.format("%.2f",customerController.getUnRealizedProfitByCustomerID(customerID)));

        LBLMyProfitsTXT.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 18)); // NOI18N
        LBLMyProfitsTXT.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        LBLMyProfitsTXT.setText("My Profits");

        LBLProfit2TXT.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        LBLProfit2TXT.setText("Total Realized Profit: $");

        LBLTotalRealizedProfit.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        LBLTotalRealizedProfit.setText(String.format("%.2f", customerController.getRealizedProfitByCustomerID(customerID)));

        BTNAddNewTradingAccount.setText("Apply for new trading account");
        BTNAddNewTradingAccount.addActionListener(customerController);

        javax.swing.GroupLayout PNLProfitsLayout = new javax.swing.GroupLayout(PNLProfits);
        PNLProfits.setLayout(PNLProfitsLayout);
        PNLProfitsLayout.setHorizontalGroup(
                PNLProfitsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(PNLProfitsLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(PNLProfitsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(LBLMyProfitsTXT, javax.swing.GroupLayout.DEFAULT_SIZE, 426, Short.MAX_VALUE)
                                        .addGroup(PNLProfitsLayout.createSequentialGroup()
                                                .addComponent(LBLProfit1TXT)
                                                .addGap(0, 0, 0)
                                                .addComponent(LBLTotalUnrealizedProfit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addGroup(PNLProfitsLayout.createSequentialGroup()
                                                .addComponent(LBLProfit2TXT)
                                                .addGap(0, 0, 0)
                                                .addComponent(LBLTotalRealizedProfit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addContainerGap())
                        .addGroup(PNLProfitsLayout.createSequentialGroup()
                                .addGap(116, 116, 116)
                                .addComponent(BTNAddNewTradingAccount, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        PNLProfitsLayout.setVerticalGroup(
                PNLProfitsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(PNLProfitsLayout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(LBLMyProfitsTXT, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(PNLProfitsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(LBLProfit1TXT, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(LBLTotalUnrealizedProfit, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(37, 37, 37)
                                .addGroup(PNLProfitsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(LBLProfit2TXT, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(LBLTotalRealizedProfit, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 63, Short.MAX_VALUE)
                                .addComponent(BTNAddNewTradingAccount, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(31, 31, 31))
        );

        PNLTop.add(PNLProfits, java.awt.BorderLayout.EAST);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(PNLTop, javax.swing.GroupLayout.DEFAULT_SIZE, 889, Short.MAX_VALUE)
                                        .addComponent(jScrollPaneTable, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addContainerGap())
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(PNLTop, javax.swing.GroupLayout.DEFAULT_SIZE, 323, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPaneTable, javax.swing.GroupLayout.PREFERRED_SIZE, 359, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents


    private void BTNAddNewTradingAccountActionPerformed(java.awt.event.ActionEvent evt) {
        //TODO Update the Database based on the following code
        boolean validToApplyNewAccount = true;


        if (validToApplyNewAccount) {
            //When a new Customer comes in, there is zero trading account, click this button to add a new trading account

            //Or if the customer's total realized profit larger than 10k, also allow to create an account

            // Then waiting for Admin to grant the permission for new trading account
            JOptionPane.showMessageDialog(this, "Application sent to the Admin. " +
                    "Please wait for approval.", "Information", JOptionPane.INFORMATION_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(this, "You are not eligible to apply new trading account.",
                    "Warning", JOptionPane.WARNING_MESSAGE);
        }

    }

    private void BTNDeductCashActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTNDeductCashActionPerformed
        //TODO Update the Database based on the following code
        try {
            // Get the current available cash
            double availableCash = Double.parseDouble(LBLCashAvailable.getText());

            // Get the amount to deduct
            String input = JOptionPane.showInputDialog(null, "Enter the amount to deduct (max 2 decimal places):");
            double amount = Double.parseDouble(String.format("%.2f", Double.parseDouble(input)));

            // Check if the deduction amount is greater than the available cash
            if (amount > availableCash) {
                throw new Exception("Deduction amount exceeds available cash.");
            }

            // Deduct the amount from the available cash
            double newCashAvailable = availableCash - amount;
            LBLCashAvailable.setText(String.format("%.2f", newCashAvailable));
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(null, "Invalid input. Please enter a valid number.");
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }
    }//GEN-LAST:event_BTNDeductCashActionPerformed

    /**
     * Refresh Page
     */
    public void updateContent() {
        /**
         * Try not to modify these code, or if you feel it's necessarily to do so
         */
        DefaultTableModel tableModel = new DefaultTableModel(data, columnNames) {
            @Override
            public boolean isCellEditable(int row, int column) {
                // Make all cells non-editable
                return false;
            }
        };
        // Set the table model for the JTable
        TBLMyAccountsTable.setModel(tableModel);
        TBLMyAccountsTable.getTableHeader().setReorderingAllowed(false);
        /****************/
        // Initialize mouse listeners in the table
        MouseListener[] mouseListeners = TBLMyAccountsTable.getMouseListeners();
        for (MouseListener mouseListener : mouseListeners) {
            TBLMyAccountsTable.removeMouseListener(mouseListener);
        }
        //Adding mouse pressed listeners to the specific areas of the table
        TBLMyAccountsTable.addMouseListener(new MouseAdapter() {
            @Override
            public void mousePressed(MouseEvent e) {
                int column = TBLMyAccountsTable.columnAtPoint(e.getPoint());
                int row = TBLMyAccountsTable.rowAtPoint(e.getPoint());

                if (row >= 0 && row < TBLMyAccountsTable.getRowCount()) {
                    // Unselect all rows except the clicked one
                    TBLMyAccountsTable.clearSelection();
                    TBLMyAccountsTable.addRowSelectionInterval(row, row);
                    if (column == 1) {
                        //implement Buy functionalities in this method
                        getReport(customerID);
                    } else if (column == 0) {
                        showAccountMenu();
                    }
                }
            }
        });

        //Special Customization for UIs
        TableColumn toBuy = TBLMyAccountsTable.getColumnModel().getColumn(1);
        toBuy.setCellRenderer(new CustomerHomeTableCellRenderer());
    }

    private void showAccountMenu() {
        new HomeAccountMenu(customerController, customerID, getName()).setVisible(true);
    }

    private void getReport(int customerID) {
        //Create a new window shows the trading history
        System.out.println("Getting report for customer ID: " + customerID);
        CustomerTradingAccountReport report = new CustomerTradingAccountReport(customerID, customerTradingHistoryController);
        report.setVisible(true);
    }


    // Variables declaration - do not modify
    private javax.swing.JButton BTNAddCash;
    private javax.swing.JButton BTNAddNewTradingAccount;
    private javax.swing.JButton BTNDeductCash;
    private javax.swing.JLabel LBLCashAvailable;
    private javax.swing.JLabel LBLMyProfitsTXT;
    private javax.swing.JLabel LBLMyWalletsTXT;
    private javax.swing.JLabel LBLProfit1TXT;
    private javax.swing.JLabel LBLProfit2TXT;
    private javax.swing.JLabel LBLTCTXT;
    private javax.swing.JLabel LBLTotalCost;
    private javax.swing.JLabel LBLTotalRealizedProfit;
    private javax.swing.JLabel LBLTotalUnrealizedProfit;
    private javax.swing.JLabel LBLWallet1TXT;
    private javax.swing.JPanel PNLProfits;
    private javax.swing.JPanel PNLTop;
    private javax.swing.JPanel PNLWallets;
    private javax.swing.JTable TBLMyAccountsTable;
    private javax.swing.JScrollPane jScrollPaneTable;
    // End of variables declaration

    /**
     * Getters for Buttons and Labels
     */
    public JButton getBTNAddCash() {
        return BTNAddCash;
    }

    public JButton getBTNAddNewTradingAccount() {
        return BTNAddNewTradingAccount;
    }

    public JButton getBTNDeductCash() {
        return BTNDeductCash;
    }

    public JLabel getLBLCashAvailable() {
        return LBLCashAvailable;
    }

    public int getCustomerID() {
        return customerID;
    }

    public void setCustomerID(int customerID) {
        this.customerID = customerID;
    }

    public Object[][] getData() {
        return data;
    }

    public void setData(Object[][] data) {
        this.data = data;
    }
}
